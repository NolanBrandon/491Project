name: Django CI

on:
  push:
    branches: [ main, 'SCRUM-*' ]
  pull_request:
    branches: [ main, 'SCRUM-*' ]

permissions:
  contents: write
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports: [5432:5432]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DJANGO_SETTINGS_MODULE: easyfitness_backend.settings
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-django

      - name: Run migrations
        run: |
          cd backend
          python manage.py migrate --noinput

      - name: Run tests with Pytest + JUnit output
        run: |
          cd backend
          python -m pytest --junitxml=test_results.xml --disable-warnings -q

      - name: Parse test results and failures
        run: |
          cd backend
          TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")

          echo "🧩 Parsing JUnit test results..."
          python ../cicd_scripts/parse_test_results.py test_results.xml ../docs/test_results.md
          echo "\n# CI Run: $TIMESTAMP\n" >> ../docs/test_results.md

          echo "🐞 Parsing test failures..."
          python ../cicd_scripts/parse_test_failures.py test_results.xml ../docs/bugs.md
          echo "\n# CI Run: $TIMESTAMP\n" >> ../docs/bugs.md

      - name: Commit and push test docs (main repo only)
        if: github.repository_owner == 'NolanBrandon'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add docs/test_results.md docs/bugs.md
          git commit -m "✅ Update test results and bug tracking from CI run" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:${{ github.head_ref || github.ref_name }}

      - name: Skip push for forked PRs
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "Skipping git push for forked PR – forks don’t have write access to this repo."
